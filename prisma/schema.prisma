// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  
  access_token       String?  
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String         @unique
  emailVerified DateTime?
  password      String?
  image         String?
  accounts      Account[]
  sessions      Session[]
  subscriptions Subscription[]
  notifications Notification[]
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Subscription {
  id              String    @id @default(cuid())
  userId          String
  user            User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  name            String
  description     String?
  price           Float
  currency        String    @default("USD")
  billingCycle    String    @default("MONTHLY") // MONTHLY, YEARLY, QUARTERLY, etc.
  trialStartDate  DateTime?
  trialEndDate    DateTime?
  nextBillingDate DateTime?
  isActive        Boolean   @default(true)
  cancellationUrl String?
  logo            String?
  website         String?
  category        String?
  notes           String?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  reminders       Reminder[]

  @@index([userId])
}

model Reminder {
  id              String        @id @default(cuid())
  subscriptionId  String
  subscription    Subscription  @relation(fields: [subscriptionId], references: [id], onDelete: Cascade)
  date            DateTime      
  sent            Boolean       @default(false)
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt

  @@index([subscriptionId])
}

model Notification {
  id              String        @id @default(cuid())
  type            String        // "reminder", "info", etc.
  title           String
  message         String
  read            Boolean       @default(false)
  createdAt       DateTime      @default(now())
  userId          String
  user            User          @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model CancellationGuide {
  id              String        @id @default(cuid())
  serviceName     String        @unique
  steps           String        // JSON string of steps
  url             String?
  createdAt       DateTime      @default(now())
  updatedAt       DateTime      @updatedAt
} 